# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401


class Video:
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, title: str=None, description: str=None, thumbnail_default: str=None, thumbnail_medium: str=None, thumbnail_high: str=None, video_link: str=None, published_at: str=None):  # noqa: E501
        """Video - a model defined in Swagger

        :param title: The title of this Video.  # noqa: E501
        :type title: str
        :param description: The description of this Video.  # noqa: E501
        :type description: str
        :param thumbnail_default: The thumbnail_default of this Video.  # noqa: E501
        :type thumbnail_default: str
        :param thumbnail_medium: The thumbnail_medium of this Video.  # noqa: E501
        :type thumbnail_medium: str
        :param thumbnail_high: The thumbnail_high of this Video.  # noqa: E501
        :type thumbnail_high: str
        :param video_link: The video_link of this Video.  # noqa: E501
        :type video_link: str
        :param published_at: The published_at of this Video.  # noqa: E501
        :type published_at: str
        """
        self.swagger_types = {
            'title': str,
            'description': str,
            'thumbnail_default': str,
            'thumbnail_medium': str,
            'thumbnail_high': str,
            'video_link': str,
            'published_at': str
        }

        self.attribute_map = {
            'title': 'title',
            'description': 'description',
            'thumbnail_default': 'thumbnailDefault',
            'thumbnail_medium': 'thumbnailMedium',
            'thumbnail_high': 'thumbnailHigh',
            'video_link': 'videoLink',
            'published_at': 'publishedAt'
        }
        self._title = title
        self._description = description
        self._thumbnail_default = thumbnail_default
        self._thumbnail_medium = thumbnail_medium
        self._thumbnail_high = thumbnail_high
        self._video_link = video_link
        self._published_at = published_at

    @property
    def title(self) -> str:
        """Gets the title of this Video.

        Video Title  # noqa: E501

        :return: The title of this Video.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Video.

        Video Title  # noqa: E501

        :param title: The title of this Video.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")  # noqa: E501

        self._title = title

    @property
    def description(self) -> str:
        """Gets the description of this Video.

        Video Description  # noqa: E501

        :return: The description of this Video.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Video.

        Video Description  # noqa: E501

        :param description: The description of this Video.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")  # noqa: E501

        self._description = description

    @property
    def thumbnail_default(self) -> str:
        """Gets the thumbnail_default of this Video.

        Thumbnail Size : 120 * 90  # noqa: E501

        :return: The thumbnail_default of this Video.
        :rtype: str
        """
        return self._thumbnail_default

    @thumbnail_default.setter
    def thumbnail_default(self, thumbnail_default: str):
        """Sets the thumbnail_default of this Video.

        Thumbnail Size : 120 * 90  # noqa: E501

        :param thumbnail_default: The thumbnail_default of this Video.
        :type thumbnail_default: str
        """

        self._thumbnail_default = thumbnail_default

    @property
    def thumbnail_medium(self) -> str:
        """Gets the thumbnail_medium of this Video.

        Thumbnail Size : 320 * 180  # noqa: E501

        :return: The thumbnail_medium of this Video.
        :rtype: str
        """
        return self._thumbnail_medium

    @thumbnail_medium.setter
    def thumbnail_medium(self, thumbnail_medium: str):
        """Sets the thumbnail_medium of this Video.

        Thumbnail Size : 320 * 180  # noqa: E501

        :param thumbnail_medium: The thumbnail_medium of this Video.
        :type thumbnail_medium: str
        """

        self._thumbnail_medium = thumbnail_medium

    @property
    def thumbnail_high(self) -> str:
        """Gets the thumbnail_high of this Video.

        Thumbnail Size: 480 * 360  # noqa: E501

        :return: The thumbnail_high of this Video.
        :rtype: str
        """
        return self._thumbnail_high

    @thumbnail_high.setter
    def thumbnail_high(self, thumbnail_high: str):
        """Sets the thumbnail_high of this Video.

        Thumbnail Size: 480 * 360  # noqa: E501

        :param thumbnail_high: The thumbnail_high of this Video.
        :type thumbnail_high: str
        """

        self._thumbnail_high = thumbnail_high

    @property
    def video_link(self) -> str:
        """Gets the video_link of this Video.

        Link to Video  # noqa: E501

        :return: The video_link of this Video.
        :rtype: str
        """
        return self._video_link

    @video_link.setter
    def video_link(self, video_link: str):
        """Sets the video_link of this Video.

        Link to Video  # noqa: E501

        :param video_link: The video_link of this Video.
        :type video_link: str
        """
        if video_link is None:
            raise ValueError("Invalid value for `video_link`, must not be `None`")  # noqa: E501

        self._video_link = video_link

    @property
    def published_at(self) -> str:
        """Gets the published_at of this Video.

        Publish Date  # noqa: E501

        :return: The published_at of this Video.
        :rtype: str
        """
        return self._published_at

    @published_at.setter
    def published_at(self, published_at: str):
        """Sets the published_at of this Video.

        Publish Date  # noqa: E501

        :param published_at: The published_at of this Video.
        :type published_at: str
        """

        self._published_at = published_at
